version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv helloworld
            . helloworld/bin/activate
            python -m pip install --upgrade pip
            pip install --no-cache-dir -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . helloworld/bin/activate
            python test_hello_world.py

  deploy:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install OpenVPN
          command: |
            sudo apt-get update
            sudo apt-get install openvpn -y
      - run:
          name: Check IP before VPN connection
          command: |
            ifconfig
            route -n
            sudo netstat -anp
            cat /etc/resolv.conf
            echo "Public IP before VPN connection is $(curl checkip.amazonaws.com)"
      - run:
          name: VPN Setup
          background: true
          command: |
            # echo $VPN_CLIENT_CONFIG | base64 --decode > /tmp/config.ovpn
            # printf "$VPN_USER\n$VPN_PASSWORD" > /tmp/vpn.login
            cp /home/circleci/repo/vpn/e.semeraro@212.184.167.99.ovpn /tmp/config.ovpn
            cp /home/circleci/repo/vpn/login.txt /tmp/vpn.login
            ls -la /tmp/
            phone_home=$(netstat -an | grep ':22 .*ESTABLISHED' | head -n1 | awk '{ split($5, a, ":"); print a[1] }') echo $phone_home
            sudo openvpn --config /tmp/config.ovpn --auth-user-pass /tmp/vpn.login \
              --route $phone_home 255.255.255.255 net_gateway \
              --route 169.254.0.0 255.255.0.0 net_gateway > /tmp/openvpn.log
      - run:
          name: Wait for the connection to be established and check
          command: |
            while [ $(cat /tmp/openvpn.log|grep -c "Initialization Sequence Completed") == 0 ]; do
              echo "Attempting to connect..."
              sleep 1;
            done
            echo "VPN Connected"
            echo "Public IP is now $(curl checkip.amazonaws.com)"
      - run:
          name: Deploy master
          command: |
            ssh k2@192.168.126.89 'cd /home/k2/repo && git pull origin master' && exit
      - run:
          name: Disconnect from OpenVPN
          command: sudo killall openvpn || true
          when: always
          

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master




# add manually the circle ssh-rsa in the authorized_keys of k2 server
# ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCygH6c5V3Cm3Dv921UBjgbaJfABNQnO6wanuMLtLBbGkSjbKQHoh5VJgt0Q1mpO8+16Tlskk4NmSUmazhEM2Xpr4J2zs4sJiUdwA7W9TlJiTsKd4GueGgjpLESutc7x2wObIkZA/ETaX+z+O3KKmkqRoB1/rNhjarBy9n/sL07qTQqHDzGAveBjsTbS3lvEYH5u8S7UtrWWc5AUvPgkBjo1SxIZFJtYheLQoSCHBCTdwMKnY3zIW5eSddWVwRFDHJBZK/jfs+lXdUkabjvMJUwnc/+lc80+3XnypJFDSnUMiLjDbzKy6saweELoiGYOI6rAJlFv1pBeh0eqQkJydtqHdjcbZbTSinA5/Bt6PWgwH8nIs9AzeiOd5VJWcMtW3czILrJDXKfAIOumvA0si2F9bbIhVPVf/SzWk67GDGks+t2vIYBoiTwQIsRsMP2Y4ETxL751pL1WGbWStAl/hiRaJGaWLOCI/fMVRsB+4M+l1ODlvdpY2PJZGC6wg3+kFEGH9vBi63hZNwmRcEqe2NO0fkehZ42tAmb8H7yi7XPMJGutbjrBF32XwaABrUn27rdkoL8/ijH9LN8NlEKiVBngWvnXBLdPT0/Nh+ok/huC0Vy6IJaAGH1jkD+wc7djju+O0AZxxz+jYwWOIynWSXk42Lz2ePc5TDP2GJR8vdKwQ==
